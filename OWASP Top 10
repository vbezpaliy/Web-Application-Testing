OWASP Top 10 2013 

Список самых опасных рисков (уязвимостей) веб-приложений от 2013 года:

    A1 Внедрение кода
    A2 Некорректная аутентификация и управление сессией
    A3 Межсайтовый скриптинг
    A4 Небезопасные прямые ссылки на объекты
    A5 Небезопасная конфигурация
    A6 Утечка чувствительных данных
    A7 Отсутствие контроля доступа к функциональному уровню
    A8 Подделка межсайтовых запросов
    A9 Использование компонентов с известными уязвимостями
    A10 Невалидированные редиректы


OWASP Top 10 2017

Список самых опасных рисков (уязвимостей) веб-приложений от 2017 года:

    A1 Внедрение кода
    A2 Некорректная аутентификация и управление сессией
    A3 Утечка чувствительных данных
    A4 Внедрение внешних XML- сущностей (XXE)
    A5 Нарушение контроля доступа
    A6 Небезопасная конфигурация
    A7 Межсайтовый скриптинг
    A8 Небезопасная десериализация
    A9 Использование компонентов с известными уязвимостями
    A10 Отсутствие журналирования и мониторинга
    
https://www.owasp.org/images/9/96/OWASP_Top_10-2017-ru.pdf

Десять смертельных заклятий

Перечень уязвимостей постоянно обновляется и на 2017 выглядит следующим образом:

• A1:2017 – Инъекции, они же “Внедрение кода”

Речь про все типы инъекций: SQL, NoSQL, LDAP – что угодно. Внедрение кода становится возможным, 
когда непроверенные данные отправляются интерпретатору как часть команды или запроса. 
Такой “злонамеренный” запрос благополучно выполняется и наносит свой ущерб. В 90% случаев, 
когда вы слышите, что был получен доступ к закрытой базе данных через веб, – это как раз наш A1.

• A2:2017 – Некорректная аутентификация

Функции приложений, которые отвечают за аутентификацию и управление сессиями, зачастую применяются неправильно, 
что влечет компрометацию паролей, ключей, сеансовых токенов, и даже возможность полностью перехватить сеанс пользователя.
Когда вы сидите в публичном wifi и внезапно обнаруживаете, что от вашего имени совершаются какие-то действия на 
публичных веб-ресурсах – это A2.

• A3:2017 – Раскрытие чувствительной информации

Многие веб-приложения и API могут некорректно хранить и обрабатывать важную информацию, вроде персональных данных. 
Злоумышленники могут украсть или изменить такую информацию, что может стать основой для серьезных финансовых или 
репутационных потерь. Чувствительная информация должна храниться должным образом, а также должна быть защищена 
при передаче по каналам связи.

• A4:2017 – Внедрение внешних XML-сущностей (XXE)

Многие старые или криво сконфигурированные XML-процессоры могут использовать внешние данные из ссылок в XML-файлах. 
Такие внешние данные могут содержать зловредный код, который позволит выполнить на целевой машине практический любой 
посторонний код.

• A5:2017 – Нарушенный контроль доступа

Матрица доступа, которая была так хороша на бумаге, может быть некорректно примерена к конкретной системе, таким образом, 
что нелегитимные пользователи легко получают доступ закрытым областям сайтов или получают возможность менять права на 
ресурсы по своему усмотрению.

• A6:2017-Security Misconfiguration – Ошибки в конфигурировании

Здесь речь идет о несколько более глобальных вещах, таких как отсутствие своевременного обновления серверного и прикладного ПО, 
наличие важных сведений в сообщениях об ошибках или даже в HTTP-заголовках. Приложение может быть практически идеальным,
но если веб-сервер, на котором оно запущено, имеет проблемы с базовой конфигурацией, то всё бесполезно.

• A7:2017 – Межсайтовый скриптинг (XSS)

XSS возникает тогда, когда приложение включает в себя недоверенные данные без должной проверки. Например, 
программный код рекламного баннера может содержать скрипт для перехвата пользовательских данных, дефейса сайта 
или даже прозрачное перенаправление на другие сайты.

• A8:2017 – Небезопасная десериализация

Небезопасная десериализация, как правило, ведет к удаленному выполнению кода. Суть в том, что недоверенные данные 
могут разрушить логику вашего приложения, как только будут десериализованы. Достаточно экзотическая на первый взгляд уязвимость,
однако занимает своё почетное место в списке.

• A9:2017 – Использование компонентов с известными уязвимостями

Библиотеки, фреймворки, операционные системы и прочие компоненты информационных систем нужно своевременно обновлять. 
В противном случае известная уязвимость в одной библиотеке сможет поставить под удар крупный сервис, использующий даже одну 
функцию из уязвимой библиотеки.

• A10:2017 – Недостаточное логирование и мониторинг

Тут всё просто – вы построили замечательную систему, однако забыли прикрутить инструменты мониторинга. 
Речь даже не о подключенной SIEM-системе, а просто о банальном логировании основных событий сервера. 
К сожалению, не редкость, когда взлом системы замечают через полгода после собственно взлома, причем узнают об этом не из логов,
а от внешних наблюдателей.
